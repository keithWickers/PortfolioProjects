// <auto-generated />
using System;
using GroceryList.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GroceryList.Migrations
{
    [DbContext(typeof(GroceryContext))]
    [Migration("20211208032152_Categories")]
    partial class Categories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroceryList.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "F",
                            Name = "Frozen"
                        },
                        new
                        {
                            CategoryId = "N",
                            Name = "Not Frozen"
                        });
                });

            modelBuilder.Entity("GroceryList.Models.Grocery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<double?>("UnitPrice")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Grocerys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = "F",
                            Name = "Steak",
                            UnitPrice = 19.5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = "N",
                            Name = "Cereal",
                            UnitPrice = 2.9900000000000002
                        });
                });

            modelBuilder.Entity("GroceryList.Models.Grocery", b =>
                {
                    b.HasOne("GroceryList.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
